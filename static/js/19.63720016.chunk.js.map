{"version":3,"file":"static/js/19.63720016.chunk.js","mappings":"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","sources":["pages/MovieDetalis.styled.js","pages/MoviesDetalis.jsx","services/MovieServices.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n color: black;\n \n   \n}\n  &.active {\n    \n     color: orange;\n  }\n\n\n`;\nexport const WrapperContent = styled.div`\n  display: flex;\n  gap: 30px;\n\n  max-width: 1280px;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport const Content = styled.div`\n  width: 50%;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const BtnGoBack = styled.button`\n  border: none;\n  padding: 12px;\n  width: 116px;\n  border-radius: 4px;\n  margin-top: 13px;\n  background-color: orange;\n  color: white;\n  font-weight: 700;\n  font-size: 18px;\n  margin-bottom: 10px;\n  margin-left: 20px;\n`;\n\nexport const ListCastReviews = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding: 10px 0;\n  margin-bottom: 10px;\n`;\n\nexport const Item = styled.li`\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 500;\n`;\n\nexport const Container = styled.div`\n   max-width: 1280px;\n    padding-left: 15px;\n    padding-right: 15px;\n\n    margin: 0 auto;\n}\n`;\n\nexport const DivMain = styled.div`\n  box-shadow: 11px 9px 17px -9px rgba(0, 0, 0, 0.75);\n`;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { MutatingDots } from 'react-loader-spinner';\nimport MovieServices from '../services/MovieServices.js';\nimport {\n  WrapperContent,\n  Content,\n  GenresList,\n  BtnGoBack,\n  ListCastReviews,\n  Item,\n  StyledLink,\n  Container,\n  DivMain,\n} from './MovieDetalis.styled';\n\nconst MoviesDetalis = () => {\n  const { movieId } = useParams();\n  const [movieDetalis, setMovieDetalis] = useState([]);\n  const location = useLocation();\n  const movieServices = new MovieServices();\n\n  // console.log({ from: location });\n  console.log(location);\n  const backLinkHref = location.state?.from ?? '/';\n  // const currentLocation = location.state.from;\n  // console.log(currentLocation);\n\n  useEffect(() => {\n    onRequest(movieId);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = async id => {\n    try {\n      const res = await movieServices.getMovieDetalis(id);\n      setMovieDetalis(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const { title, image, overview, genres, userScore } = movieDetalis;\n\n  return (\n    <main>\n      <WrapperContent>\n        {image && <img width={250} src={image} alt={title} />}\n        <Content>\n          <h1>{title}</h1>\n          <p>User score: {(userScore * 10).toFixed(0)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres: </h2>\n          <GenresList>\n            {genres && genres.map(({ name, id }) => <li key={id}>{name}</li>)}\n          </GenresList>\n        </Content>\n      </WrapperContent>\n      <BtnGoBack>\n        <Link to={backLinkHref}>Go back </Link>\n      </BtnGoBack>\n      <DivMain>\n        <Container>\n          <ListCastReviews>\n            <Item>\n              <StyledLink to=\"cast\">Read about our cast</StyledLink>\n            </Item>\n            <Item>\n              <StyledLink to=\"reviews\">Get to know the reviews</StyledLink>\n            </Item>\n          </ListCastReviews>\n        </Container>\n      </DivMain>\n\n      <Suspense\n        fallback={\n          <div>\n            <MutatingDots\n              ariaLabel=\"mutating-dots-loading\"\n              wrapperStyle={{ display: 'flex', justifyContent: 'center' }}\n            />\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MoviesDetalis;\n","import axios from 'axios';\n\nclass MovieServices {\n  API_KEY = '8dbbaf50b58201a2d3381e6f92e0ca1f';\n  BASE_URL = 'https://api.themoviedb.org/3/';\n  BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\n  getTrendingMovies = async () => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}trending/movie/day?api_key=${this.API_KEY}`\n      );\n\n      return this._transformTrendingMovies(res.data.results);\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  };\n\n  getMovieDetalis = async id => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}movie/${id}?api_key=${this.API_KEY}&language=en-US`\n      );\n\n      return this._transformMovieDetalis(res.data);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  getCastOrReviewsMovie = async (id, categorie) => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}movie/${id}/${categorie}?api_key=${this.API_KEY}&language=en-US`\n      );\n      if (categorie === 'credits') {\n        return this._transformCastMovie(res.data.cast);\n      }\n      if (categorie === 'reviews') {\n        if (!res.data.results.length) {\n          return null;\n        } else {\n          return this._transformReviewsMovie(res.data.results);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  getMovieSearch = async query => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}search/movie?api_key=${this.API_KEY}&language=en-US&include_adult=false&query=${query}`\n      );\n\n      return this._transformMovie(res.data.results);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  _transformMovie = movies => {\n    return movies.map(({ id, title, poster_path }) => {\n      if (!poster_path) {\n        return {\n          title,\n          image: null,\n          id,\n        };\n      }\n      return {\n        id,\n        title,\n        image: `${this.BASE_URL_IMG}${poster_path}`,\n      };\n    });\n  };\n\n  _transformMovieDetalis = ({\n    title,\n    poster_path,\n    overview,\n    genres,\n    vote_average,\n  }) => {\n    if (!poster_path) {\n      return {\n        title,\n        image: null,\n        overview,\n        genres,\n        userScore: vote_average,\n      };\n    }\n    return {\n      title,\n      image: `${this.BASE_URL_IMG}${poster_path}`,\n      overview,\n      genres,\n      userScore: vote_average,\n    };\n  };\n\n  _transformCastMovie = cast => {\n    return cast.map(({ character, name, profile_path, id }) => {\n      if (!profile_path) {\n        return {\n          character,\n          name,\n          id,\n          image: null,\n        };\n      }\n      return {\n        character,\n        name,\n        id,\n        image: `${this.BASE_URL_IMG}${profile_path}`,\n      };\n    });\n  };\n\n  _transformReviewsMovie = reviews => {\n    return reviews.map(({ author, id, content }) => {\n      return { author, id, content };\n    });\n  };\n\n  _transformTrendingMovies = movies => {\n    return movies.map(({ id, title, poster_path }) => {\n      return {\n        id,\n        title,\n        images: `${this.BASE_URL_IMG}${poster_path}`,\n      };\n    });\n  };\n}\n\nexport default MovieServices;\n"],"names":["StyledLink","styled","NavLink","WrapperContent","Content","GenresList","BtnGoBack","ListCastReviews","Item","Container","DivMain","movieId","useParams","useState","movieDetalis","setMovieDetalis","location","useLocation","movieServices","MovieServices","console","log","backLinkHref","state","from","useEffect","onRequest","id","getMovieDetalis","res","title","image","overview","genres","userScore","width","src","alt","toFixed","map","name","to","Suspense","fallback","ariaLabel","wrapperStyle","display","justifyContent","API_KEY","BASE_URL","BASE_URL_IMG","getTrendingMovies","axios","_transformTrendingMovies","data","results","_transformMovieDetalis","getCastOrReviewsMovie","categorie","_transformCastMovie","cast","length","_transformReviewsMovie","getMovieSearch","query","_transformMovie","movies","poster_path","vote_average","character","profile_path","reviews","author","content","images"],"sourceRoot":""}