{"version":3,"file":"static/js/538.6660cf49.chunk.js","mappings":"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","sources":["components/TrendingListMovie/TrendingList.styled.js","components/TrendingListMovie/TrendingListMovie.jsx","pages/Home.jsx","services/MovieServices.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 26px;\n  justify-content: center;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 20px;\n  padding: 0 10px;\n`;\n\nexport const ImgMovie = styled.img`\n  margin-bottom: 10px;\n`;\n\nexport const Item = styled.li`\n  width: 300px;\n`;\nexport const Container = styled.div`\n   max-width: 1280px;\n    padding-left: 15px;\n    padding-right: 15px;\n    margin: o auto;\n    margin: 0 auto;\n}\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MoviesList } from './TrendingList.styled';\nimport { MovieTitle, ImgMovie, Item } from './TrendingList.styled';\n\nconst TrendingListMovie = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesList>\n      {movies.map(({ title, id, images }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <ImgMovie width={300} src={images} alt={title} />\n            <MovieTitle>{title}</MovieTitle>\n          </Link>\n        </Item>\n      ))}\n    </MoviesList>\n  );\n};\n\nTrendingListMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      images: PropTypes.string,\n    })\n  ),\n};\n\nexport default TrendingListMovie;\n","import { useState, useEffect } from 'react';\n\nimport MovieServices from '../services/MovieServices';\nimport TrendingListMovie from '../components/TrendingListMovie/TrendingListMovie';\nimport { Container } from '../components/TrendingListMovie/TrendingList.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const movieServices = new MovieServices();\n\n  useEffect(() => {\n    onRequest();\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = async () => {\n    try {\n      const res = await movieServices.getTrendingMovies();\n\n      setTrendingMovies(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <main>\n      <Container>\n        <h1 style={{ marginBottom: '20px' }}>Trending today</h1>\n        <TrendingListMovie movies={trendingMovies} />\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nclass MovieServices {\n  API_KEY = '8dbbaf50b58201a2d3381e6f92e0ca1f';\n  BASE_URL = 'https://api.themoviedb.org/3/';\n  BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\n  getTrendingMovies = async () => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}trending/movie/day?api_key=${this.API_KEY}`\n      );\n\n      return this._transformTrendingMovies(res.data.results);\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  };\n\n  getMovieDetalis = async id => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}movie/${id}?api_key=${this.API_KEY}&language=en-US`\n      );\n\n      return this._transformMovieDetalis(res.data);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  getCastOrReviewsMovie = async (id, categorie) => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}movie/${id}/${categorie}?api_key=${this.API_KEY}&language=en-US`\n      );\n      if (categorie === 'credits') {\n        return this._transformCastMovie(res.data.cast);\n      }\n      if (categorie === 'reviews') {\n        if (!res.data.results.length) {\n          return null;\n        } else {\n          return this._transformReviewsMovie(res.data.results);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  getMovieSearch = async query => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}search/movie?api_key=${this.API_KEY}&language=en-US&include_adult=false&query=${query}`\n      );\n\n      return this._transformMovie(res.data.results);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  _transformMovie = movies => {\n    return movies.map(({ id, title, poster_path }) => {\n      if (!poster_path) {\n        return {\n          title,\n          image: null,\n          id,\n        };\n      }\n      return {\n        id,\n        title,\n        image: `${this.BASE_URL_IMG}${poster_path}`,\n      };\n    });\n  };\n\n  _transformMovieDetalis = ({\n    title,\n    poster_path,\n    overview,\n    genres,\n    vote_average,\n  }) => {\n    if (!poster_path) {\n      return {\n        title,\n        image: null,\n        overview,\n        genres,\n        userScore: vote_average,\n      };\n    }\n    return {\n      title,\n      image: `${this.BASE_URL_IMG}${poster_path}`,\n      overview,\n      genres,\n      userScore: vote_average,\n    };\n  };\n\n  _transformCastMovie = cast => {\n    return cast.map(({ character, name, profile_path, id }) => {\n      if (!profile_path) {\n        return {\n          character,\n          name,\n          id,\n          image: null,\n        };\n      }\n      return {\n        character,\n        name,\n        id,\n        image: `${this.BASE_URL_IMG}${profile_path}`,\n      };\n    });\n  };\n\n  _transformReviewsMovie = reviews => {\n    return reviews.map(({ author, id, content }) => {\n      return { author, id, content };\n    });\n  };\n\n  _transformTrendingMovies = movies => {\n    return movies.map(({ id, title, poster_path }) => {\n      return {\n        id,\n        title,\n        images: `${this.BASE_URL_IMG}${poster_path}`,\n      };\n    });\n  };\n}\n\nexport default MovieServices;\n"],"names":["MoviesList","styled","MovieTitle","ImgMovie","Item","Container","movies","location","useLocation","map","title","id","images","to","state","from","width","src","alt","useState","trendingMovies","setTrendingMovies","movieServices","MovieServices","useEffect","onRequest","getTrendingMovies","res","console","log","style","marginBottom","API_KEY","BASE_URL","BASE_URL_IMG","axios","_transformTrendingMovies","data","results","getMovieDetalis","_transformMovieDetalis","getCastOrReviewsMovie","categorie","_transformCastMovie","cast","length","_transformReviewsMovie","getMovieSearch","query","_transformMovie","poster_path","image","overview","genres","vote_average","userScore","character","name","profile_path","reviews","author","content"],"sourceRoot":""}