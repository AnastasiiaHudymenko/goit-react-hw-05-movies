{"version":3,"file":"static/js/608.6faee4ce.chunk.js","mappings":"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","sources":["components/ReviewsMovie/ReviewsMovie.styled.js","components/ReviewsMovie/ReviewsMovie.jsx","services/MovieServices.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const AuthorTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n   max-width: 1280px;\n    padding-left: 15px;\n    padding-right: 15px;\n\n    margin: 0 auto;\n}\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport MovieServices from '../../services/MovieServices.js';\nimport {\n  ReviewsList,\n  AuthorTitle,\n  ReviewsItem,\n  Container,\n} from './ReviewsMovie.styled';\n\nconst ReviewsMovie = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const movieServices = new MovieServices();\n\n  useEffect(() => {\n    onRequest(movieId);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = async id => {\n    try {\n      const res = await movieServices.getCastOrReviewsMovie(id, 'reviews');\n      setReviews(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      {reviews ? (\n        <Container>\n          <ReviewsList>\n            {reviews.map(({ author, content, id }) => {\n              return (\n                <ReviewsItem key={id}>\n                  <AuthorTitle>Author: {author}</AuthorTitle>\n                  <p>\n                    {' '}\n                    <b>Content:</b> {content}\n                  </p>\n                </ReviewsItem>\n              );\n            })}\n          </ReviewsList>\n        </Container>\n      ) : (\n        <p>No reviews found for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsMovie;\n","import axios from 'axios';\n\nclass MovieServices {\n  API_KEY = '8dbbaf50b58201a2d3381e6f92e0ca1f';\n  BASE_URL = 'https://api.themoviedb.org/3/';\n  BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\n  getTrendingMovies = async () => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}trending/movie/day?api_key=${this.API_KEY}`\n      );\n\n      return this._transformTrendingMovies(res.data.results);\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  };\n\n  getMovieDetalis = async id => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}movie/${id}?api_key=${this.API_KEY}&language=en-US`\n      );\n\n      return this._transformMovieDetalis(res.data);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  getCastOrReviewsMovie = async (id, categorie) => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}movie/${id}/${categorie}?api_key=${this.API_KEY}&language=en-US`\n      );\n      if (categorie === 'credits') {\n        return this._transformCastMovie(res.data.cast);\n      }\n      if (categorie === 'reviews') {\n        if (!res.data.results.length) {\n          return null;\n        } else {\n          return this._transformReviewsMovie(res.data.results);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  getMovieSearch = async query => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}search/movie?api_key=${this.API_KEY}&language=en-US&include_adult=false&query=${query}`\n      );\n\n      return this._transformMovie(res.data.results);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  _transformMovie = movies => {\n    return movies.map(({ id, title, poster_path }) => {\n      if (!poster_path) {\n        return {\n          title,\n          image: null,\n          id,\n        };\n      }\n      return {\n        id,\n        title,\n        image: `${this.BASE_URL_IMG}${poster_path}`,\n      };\n    });\n  };\n\n  _transformMovieDetalis = ({\n    title,\n    poster_path,\n    overview,\n    genres,\n    popularity,\n  }) => {\n    if (!poster_path) {\n      return {\n        title,\n        image: null,\n        overview,\n        genres,\n        userScore: popularity,\n      };\n    }\n    return {\n      title,\n      image: `${this.BASE_URL_IMG}${poster_path}`,\n      overview,\n      genres,\n      userScore: popularity,\n    };\n  };\n\n  _transformCastMovie = cast => {\n    return cast.map(({ character, name, profile_path, id }) => {\n      if (!profile_path) {\n        return {\n          character,\n          name,\n          id,\n          image: null,\n        };\n      }\n      return {\n        character,\n        name,\n        id,\n        image: `${this.BASE_URL_IMG}${profile_path}`,\n      };\n    });\n  };\n\n  _transformReviewsMovie = reviews => {\n    return reviews.map(({ author, id, content }) => {\n      return { author, id, content };\n    });\n  };\n\n  _transformTrendingMovies = movies => {\n    return movies.map(({ id, title, poster_path }) => {\n      return {\n        id,\n        title,\n        images: `${this.BASE_URL_IMG}${poster_path}`,\n      };\n    });\n  };\n}\n\nexport default MovieServices;\n"],"names":["ReviewsList","styled","AuthorTitle","ReviewsItem","Container","movieId","useParams","useState","reviews","setReviews","movieServices","MovieServices","useEffect","onRequest","id","getCastOrReviewsMovie","res","console","log","map","author","content","API_KEY","BASE_URL","BASE_URL_IMG","getTrendingMovies","axios","_transformTrendingMovies","data","results","getMovieDetalis","_transformMovieDetalis","categorie","_transformCastMovie","cast","length","_transformReviewsMovie","getMovieSearch","query","_transformMovie","movies","title","poster_path","image","overview","genres","popularity","userScore","character","name","profile_path","images"],"sourceRoot":""}