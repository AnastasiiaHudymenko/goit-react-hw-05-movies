{"version":3,"file":"static/js/157.3126fa10.chunk.js","mappings":"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","sources":["components/TrendingListMovie/TrendingList.styled.js","components/TrendingListMovie/TrendingListMovie.jsx","pages/Home.jsx","services/MovieServices.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 26px;\n  justify-content: center;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 20px;\n  padding: 0 10px;\n`;\n\nexport const ImgMovie = styled.img`\n  margin-bottom: 10px;\n`;\n\nexport const Item = styled.li`\n  width: 300px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MoviesList } from './TrendingList.styled';\nimport { MovieTitle, ImgMovie, Item } from './TrendingList.styled';\n\nconst TrendingListMovie = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesList>\n      {movies.map(({ title, id, images }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <ImgMovie width={300} src={images} alt={title} />\n            <MovieTitle>{title}</MovieTitle>\n          </Link>\n        </Item>\n      ))}\n    </MoviesList>\n  );\n};\n\nexport default TrendingListMovie;\n","import { useState, useEffect } from 'react';\nimport MovieServices from '../services/MovieServices';\nimport TrendingListMovie from '../components/TrendingListMovie/TrendingListMovie';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const movieServices = new MovieServices();\n\n  useEffect(() => {\n    onRequest();\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = async () => {\n    try {\n      const res = await movieServices.getTrendingMovies();\n      setTrendingMovies(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <TrendingListMovie movies={trendingMovies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nclass MovieServices {\n  API_KEY = '8dbbaf50b58201a2d3381e6f92e0ca1f';\n  BASE_URL = 'https://api.themoviedb.org/3/';\n  BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\n  getTrendingMovies = async () => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}trending/movie/day?api_key=${this.API_KEY}`\n      );\n      return this._transformTrendingMovies(res.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  _transformTrendingMovies = movies => {\n    return movies.map(({ id, title, poster_path }) => {\n      return {\n        id,\n        title,\n        images: `${this.BASE_URL_IMG}${poster_path}`,\n      };\n    });\n  };\n\n  getMovieDetalis = async id => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}movie/${id}?api_key=${this.API_KEY}&language=en-US`\n      );\n      return this._transformMovieDetalis(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  getCastOrReviewsMovie = async (id, categorie) => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}movie/${id}/${categorie}?api_key=${this.API_KEY}&language=en-US`\n      );\n      if (categorie === 'credits') {\n        return this._transformCastMovie(res.data.cast);\n      }\n      if (categorie === 'reviews') {\n        if (!res.data.results.length) {\n          return null;\n        } else {\n          return this._transformReviewsMovie(res.data.results);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  getMovieSearch = async query => {\n    try {\n      const res = await axios.get(\n        `${this.BASE_URL}search/movie?api_key=${this.API_KEY}&language=en-US&include_adult=false&query=${query}`\n      );\n      return this._transformMovie(res.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  _transformMovie = movies => {\n    return movies.map(({ id, title }) => {\n      return { id, title };\n    });\n  };\n\n  _transformMovieDetalis = ({\n    title,\n    poster_path,\n    overview,\n    genres,\n    popularity,\n  }) => {\n    if (!poster_path) {\n      return {\n        title,\n        image: null,\n        overview,\n        genres,\n        userScore: popularity,\n      };\n    }\n    return {\n      title,\n      image: `${this.BASE_URL_IMG}${poster_path}`,\n      overview,\n      genres,\n      userScore: popularity,\n    };\n  };\n\n  _transformCastMovie = cast => {\n    return cast.map(({ character, name, profile_path, id }) => {\n      if (!profile_path) {\n        return {\n          character,\n          name,\n          id,\n          image: null,\n        };\n      }\n      return {\n        character,\n        name,\n        id,\n        image: `${this.BASE_URL_IMG}${profile_path}`,\n      };\n    });\n  };\n\n  _transformReviewsMovie = reviews => {\n    return reviews.map(({ author, id, content }) => {\n      return { author, id, content };\n    });\n  };\n}\n\nexport default MovieServices;\n"],"names":["MoviesList","styled","MovieTitle","ImgMovie","Item","movies","location","useLocation","map","title","id","images","to","state","from","width","src","alt","useState","trendingMovies","setTrendingMovies","movieServices","MovieServices","useEffect","onRequest","getTrendingMovies","res","console","log","API_KEY","BASE_URL","BASE_URL_IMG","axios","_transformTrendingMovies","data","results","poster_path","getMovieDetalis","_transformMovieDetalis","getCastOrReviewsMovie","categorie","_transformCastMovie","cast","length","_transformReviewsMovie","getMovieSearch","query","_transformMovie","overview","genres","popularity","image","userScore","character","name","profile_path","reviews","author","content"],"sourceRoot":""}